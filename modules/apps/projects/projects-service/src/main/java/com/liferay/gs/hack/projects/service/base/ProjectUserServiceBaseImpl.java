/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.gs.hack.projects.service.base;

import com.liferay.gs.hack.projects.model.ProjectUser;
import com.liferay.gs.hack.projects.service.ProjectUserService;
import com.liferay.gs.hack.projects.service.persistence.ProjectPersistence;
import com.liferay.gs.hack.projects.service.persistence.ProjectTaskPersistence;
import com.liferay.gs.hack.projects.service.persistence.ProjectUserPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the project user remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.gs.hack.projects.service.impl.ProjectUserServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.liferay.gs.hack.projects.service.impl.ProjectUserServiceImpl
 * @see com.liferay.gs.hack.projects.service.ProjectUserServiceUtil
 * @generated
 */
public abstract class ProjectUserServiceBaseImpl extends BaseServiceImpl
	implements ProjectUserService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.gs.hack.projects.service.ProjectUserServiceUtil} to access the project user remote service.
	 */

	/**
	 * Returns the project local service.
	 *
	 * @return the project local service
	 */
	public com.liferay.gs.hack.projects.service.ProjectLocalService getProjectLocalService() {
		return projectLocalService;
	}

	/**
	 * Sets the project local service.
	 *
	 * @param projectLocalService the project local service
	 */
	public void setProjectLocalService(
		com.liferay.gs.hack.projects.service.ProjectLocalService projectLocalService) {
		this.projectLocalService = projectLocalService;
	}

	/**
	 * Returns the project remote service.
	 *
	 * @return the project remote service
	 */
	public com.liferay.gs.hack.projects.service.ProjectService getProjectService() {
		return projectService;
	}

	/**
	 * Sets the project remote service.
	 *
	 * @param projectService the project remote service
	 */
	public void setProjectService(
		com.liferay.gs.hack.projects.service.ProjectService projectService) {
		this.projectService = projectService;
	}

	/**
	 * Returns the project persistence.
	 *
	 * @return the project persistence
	 */
	public ProjectPersistence getProjectPersistence() {
		return projectPersistence;
	}

	/**
	 * Sets the project persistence.
	 *
	 * @param projectPersistence the project persistence
	 */
	public void setProjectPersistence(ProjectPersistence projectPersistence) {
		this.projectPersistence = projectPersistence;
	}

	/**
	 * Returns the project task local service.
	 *
	 * @return the project task local service
	 */
	public com.liferay.gs.hack.projects.service.ProjectTaskLocalService getProjectTaskLocalService() {
		return projectTaskLocalService;
	}

	/**
	 * Sets the project task local service.
	 *
	 * @param projectTaskLocalService the project task local service
	 */
	public void setProjectTaskLocalService(
		com.liferay.gs.hack.projects.service.ProjectTaskLocalService projectTaskLocalService) {
		this.projectTaskLocalService = projectTaskLocalService;
	}

	/**
	 * Returns the project task remote service.
	 *
	 * @return the project task remote service
	 */
	public com.liferay.gs.hack.projects.service.ProjectTaskService getProjectTaskService() {
		return projectTaskService;
	}

	/**
	 * Sets the project task remote service.
	 *
	 * @param projectTaskService the project task remote service
	 */
	public void setProjectTaskService(
		com.liferay.gs.hack.projects.service.ProjectTaskService projectTaskService) {
		this.projectTaskService = projectTaskService;
	}

	/**
	 * Returns the project task persistence.
	 *
	 * @return the project task persistence
	 */
	public ProjectTaskPersistence getProjectTaskPersistence() {
		return projectTaskPersistence;
	}

	/**
	 * Sets the project task persistence.
	 *
	 * @param projectTaskPersistence the project task persistence
	 */
	public void setProjectTaskPersistence(
		ProjectTaskPersistence projectTaskPersistence) {
		this.projectTaskPersistence = projectTaskPersistence;
	}

	/**
	 * Returns the project user local service.
	 *
	 * @return the project user local service
	 */
	public com.liferay.gs.hack.projects.service.ProjectUserLocalService getProjectUserLocalService() {
		return projectUserLocalService;
	}

	/**
	 * Sets the project user local service.
	 *
	 * @param projectUserLocalService the project user local service
	 */
	public void setProjectUserLocalService(
		com.liferay.gs.hack.projects.service.ProjectUserLocalService projectUserLocalService) {
		this.projectUserLocalService = projectUserLocalService;
	}

	/**
	 * Returns the project user remote service.
	 *
	 * @return the project user remote service
	 */
	public ProjectUserService getProjectUserService() {
		return projectUserService;
	}

	/**
	 * Sets the project user remote service.
	 *
	 * @param projectUserService the project user remote service
	 */
	public void setProjectUserService(ProjectUserService projectUserService) {
		this.projectUserService = projectUserService;
	}

	/**
	 * Returns the project user persistence.
	 *
	 * @return the project user persistence
	 */
	public ProjectUserPersistence getProjectUserPersistence() {
		return projectUserPersistence;
	}

	/**
	 * Sets the project user persistence.
	 *
	 * @param projectUserPersistence the project user persistence
	 */
	public void setProjectUserPersistence(
		ProjectUserPersistence projectUserPersistence) {
		this.projectUserPersistence = projectUserPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return ProjectUserService.class.getName();
	}

	protected Class<?> getModelClass() {
		return ProjectUser.class;
	}

	protected String getModelClassName() {
		return ProjectUser.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = projectUserPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.gs.hack.projects.service.ProjectLocalService.class)
	protected com.liferay.gs.hack.projects.service.ProjectLocalService projectLocalService;
	@BeanReference(type = com.liferay.gs.hack.projects.service.ProjectService.class)
	protected com.liferay.gs.hack.projects.service.ProjectService projectService;
	@BeanReference(type = ProjectPersistence.class)
	protected ProjectPersistence projectPersistence;
	@BeanReference(type = com.liferay.gs.hack.projects.service.ProjectTaskLocalService.class)
	protected com.liferay.gs.hack.projects.service.ProjectTaskLocalService projectTaskLocalService;
	@BeanReference(type = com.liferay.gs.hack.projects.service.ProjectTaskService.class)
	protected com.liferay.gs.hack.projects.service.ProjectTaskService projectTaskService;
	@BeanReference(type = ProjectTaskPersistence.class)
	protected ProjectTaskPersistence projectTaskPersistence;
	@BeanReference(type = com.liferay.gs.hack.projects.service.ProjectUserLocalService.class)
	protected com.liferay.gs.hack.projects.service.ProjectUserLocalService projectUserLocalService;
	@BeanReference(type = ProjectUserService.class)
	protected ProjectUserService projectUserService;
	@BeanReference(type = ProjectUserPersistence.class)
	protected ProjectUserPersistence projectUserPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}